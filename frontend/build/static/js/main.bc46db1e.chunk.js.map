{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","onClick","onCardDelete","link","name","onCardClick","onCardLike","length","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","item","Footer","PopupWithForm","isOpen","onClose","title","action","onSubmit","noValidate","children","ImagePopup","api","address","token","groupId","this","_token","_groupId","_address","res","ok","json","Promise","reject","status","fetch","headers","authorization","then","getResponse","method","body","JSON","stringify","_getResponse","cardId","cardID","like","EditProfilePopup","useState","setName","description","setDescription","useEffect","event","preventDefault","onUpdateUser","placeholder","minLength","maxLength","autoComplete","required","value","onChange","target","id","EditAvatarPopup","inputRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","placeName","setPlaceName","placeLink","setPlaceLink","App","setCurrentUser","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","closeAllPopups","getUserInfo","userData","catch","err","console","log","setCards","getCards","Provider","toggleLike","newCard","newCards","c","removeCard","filter","setUserInfo","avatarData","setUserAvatar","addCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.bc46db1e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a307e1c4.svg\";","import logo from \"../images/logo.svg\";\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <img src={logo} alt=\"Проект Mesto\" className=\"header__logo\"/>\n        </header>\n    )\n\n}\n\nexport default Header;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\n\n\nfunction Card(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    function handleCardClick() {\n        props.onCardClick(props.card);\n    }\n\n    function handleLikeClick() {\n        props.onCardLike(props.card)\n    }\n\n    function handleDeleteClick() {\n        props.onCardDelete(props.card)\n    }\n\n    const isOwn = props.card.owner._id === currentUser._id;\n    const cardDeleteButtonClassName = `cards__delete-button ${!isOwn && 'cards__delete-button_hidden'}`;\n\n    const isLiked = props.card.likes.some((i) => i._id === currentUser._id);\n    const cardLikeButtonClassName = `cards__like-button ${isLiked && 'cards__like-button_active'}`;\n\n    return (\n        <div className=\"cards__card\">\n            <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\n            <img\n                src={props.card.link}\n                alt={props.card.name}\n                className=\"cards__image\"\n                onClick={handleCardClick}\n            />\n            <div className=\"cards__info\">\n                <h2 className=\"cards__title\">{props.card.name}</h2>\n                <div className=\"cards__like-container\">\n                    <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\n                    <p className=\"cards__like-count\">{props.card.likes.length}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className=\"main\">\n            <section className=\"profile\">\n                <div className=\"profile__container\">\n                    <div className=\"profile__avatar-container\" onClick={props.onEditAvatar}>\n                        <img className=\"profile__avatar\"\n                             src={currentUser.avatar}\n                             alt=\"Аватар\"\n                        />\n                    </div>\n                    <div className=\"profile__block\">\n                        <div className=\"profile__info\">\n                            <h1 className=\"profile__title\">{currentUser.name}</h1>\n                            <button type=\"button\" className=\"profile__edit-button\"\n                                    onClick={props.onEditProfile}></button>\n                        </div>\n                        <p className=\"profile__description\">{currentUser.about}</p>\n                    </div>\n                    <button type=\"button\" className=\"profile__add-button\" onClick={props.onAddPlace}></button>\n                </div>\n            </section>\n            <section className=\"cards\">\n                <div className=\"cards__grid\">{props.cards.map((item) => {\n                    return (\n                        <Card\n                            card={item}\n                            key={item._id}\n                            onCardClick={props.onCardClick}\n                            onCardLike={props.onCardLike}\n                            onCardDelete={props.onCardDelete}\n                        />\n                    );\n                })}\n                </div>\n            </section>\n        </main>\n    )\n\n}\n\nexport default Main;","function Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n        </footer>\n    )\n\n}\n\nexport default Footer;","import React from 'react';\n\nfunction PopupWithForm(props) {\n    return (\n        <>\n            <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`}>\n                <div className=\"popup__container\">\n                    <button type=\"button\" className=\"popup__close-button\" onClick={props.onClose}></button>\n                    <h2 className=\"popup__title\">{props.title}</h2>\n                    <form action=\"#\" className=\"popup__form\" name={props.name} onSubmit={props.onSubmit} noValidate>\n                        {props.children}\n                        <button type=\"submit\" className=\"popup__submit\">Сохранить</button>\n                    </form>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default PopupWithForm;\n","import React from 'react';\n\nfunction ImagePopup(props) {\n    return (\n        <div className={`popup popup_type_image ${props.isOpen && 'popup_opened'}`}>\n            <div className=\"popup__container_type_image\">\n                <button type=\"button\" className=\"popup__close-button\" onClick={props.onClose}></button>\n                <figure className=\"popup__figure\">\n                    <img src={props.card ? props.card.link : ''} alt={props.card ? props.card.name : ''}\n                         className=\"popup__image\"/>\n                    <figcaption className=\"popup__description\">{props.card ? props.card.name : ''}</figcaption>\n                </figure>\n            </div>\n        </div>\n\n    )\n}\n\nexport default ImagePopup;","class Api {\n    constructor({address, token, groupId}) {\n        this._token = token;\n        this._groupId = groupId;\n        this._address = address;\n    }\n\n    getResponse(res) {\n        return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`)\n    }\n\n    getUserInfo() {\n        return fetch(`${this._address}/${this._groupId}/users/me`, {\n            headers: {\n                authorization: this._token\n            }\n        })\n            .then(this.getResponse)\n    }\n\n    setUserInfo({name, about}) {\n        return fetch(`${this._address}/${this._groupId}/users/me`, {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name,\n                about\n            })\n        })\n            .then(this.getResponse)\n    }\n\n    setUserAvatar({avatar}) {\n        return fetch(`${this._address}/${this._groupId}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                avatar,\n            }),\n        })\n            .then(this._getResponse)\n    }\n\n    getCards() {\n        return fetch(`${this._address}/${this._groupId}/cards`, {\n            headers: {\n                authorization: this._token\n            }\n        })\n            .then(this.getResponse)\n    }\n\n    addCard({name, link}) {\n        return fetch(`${this._address}/${this._groupId}/cards`, {\n            method: 'POST',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name,\n                link,\n            })\n        })\n            .then(this.getResponse)\n    }\n\n    removeCard(cardId) {\n        return fetch(`${this._address}/${this._groupId}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: {\n                authorization: this._token,\n            }\n        })\n            .then(this.getResponse)\n    }\n\n    toggleLike(cardID, like) {\n        return fetch(`${this._address}/${this._groupId}/cards/likes/${cardID}`, {\n            method: like ? 'PUT' : 'DELETE',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(this.getResponse)\n    }\n}\n\nconst api = new Api({\n    address: \"https://mesto.nomoreparties.co/v1\",\n    groupId: `cohort-16`,\n    token: `6b84de2d-b5c7-4b45-ba81-be44fff680e4`,\n});\n\nexport default api;\n\n","import React, {useEffect, useState} from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n\n    function handleNameChange(event) {\n        setName(event.target.value)\n    }\n\n    function handleDescriptionChange(event) {\n        setDescription(event.target.value)\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        props.onUpdateUser({\n            name,\n            about: description,\n        });\n    }\n\n    useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser.about, currentUser.name, props.isOpen]);\n\n    return (\n        <PopupWithForm\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            name='edit-profile'\n            title='Редактировать профиль'\n            onSubmit={handleSubmit}\n            children={\n                <>\n                    <input\n                        name=\"name\"\n                        type=\"text\"\n                        placeholder=\"Имя\"\n                        className=\"popup__input-text popup__input-text_type_name\"\n                        minLength=\"2\"\n                        maxLength=\"40\"\n                        autoComplete=\"off\"\n                        required\n                        value={name || ''}\n                        onChange={handleNameChange}\n                    />\n                    <span id=\"name-error\" className='popup__error'></span>\n                    <input\n                        name=\"job\"\n                        type=\"text\"\n                        placeholder=\"Профессия\"\n                        className=\"popup__input-text popup__input-text_type_job\"\n                        minLength=\"2\"\n                        maxLength=\"200\"\n                        autoComplete=\"off\"\n                        required\n                        value={description || ''}\n                        onChange={handleDescriptionChange}\n                    />\n                    <span id=\"job-error\" className='popup__error'></span>\n                </>\n\n            }/>\n    )\n}\n\nexport default EditProfilePopup;","import React, {useRef} from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n\n    const inputRef = useRef();\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        props.onUpdateAvatar({\n            avatar: inputRef.current.value,\n        });\n    }\n\n    return (\n        <PopupWithForm\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            name='update-avatar'\n            title='Обновить Аватар'\n            onSubmit={handleSubmit}\n            children={\n                <>\n                    <input\n                        ref={inputRef}\n                        name=\"avatar\"\n                        type=\"url\"\n                        placeholder=\"Введите URL аватара\"\n                        className=\"popup__input-text popup__input-text_type_avatar-source\"\n                        required\n                    />\n                    <span id=\"avatar-error\" className='popup__error'></span>\n                </>\n            }\n        />\n    )\n}\n\nexport default EditAvatarPopup;","import React, {useState} from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup(props) {\n\n    const [placeName, setPlaceName] = useState('');\n    const [placeLink, setPlaceLink] = useState('');\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        props.onAddPlace({\n            name: placeName,\n            link: placeLink,\n        })\n    }\n\n    function handlePlaceNameInput(event) {\n        setPlaceName(event.target.value);\n    }\n\n    function handlePlaceLinkInput(event) {\n        setPlaceLink(event.target.value);\n    }\n\n    return (\n        <PopupWithForm\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            onSubmit={handleSubmit}\n            name='add-card'\n            title='Новое место'\n            children={\n                <>\n                    <input\n                        name=\"place\"\n                        type=\"text\"\n                        placeholder=\"Название\"\n                        className=\"popup__input-text popup__input-text_type_place\"\n                        minLength=\"1\"\n                        maxLength=\"30\"\n                        autoComplete=\"off\"\n                        required\n                        value={placeName}\n                        onChange={handlePlaceNameInput}\n                    />\n                    <span id=\"place-error\" className='popup__error'></span>\n                    <input\n                        name=\"image\"\n                        type=\"url\"\n                        placeholder=\"Ссылка на картинку\"\n                        className=\"popup__input-text popup__input-text_type_url\"\n                        autoComplete=\"off\"\n                        required\n                        value={placeLink}\n                        onChange={handlePlaceLinkInput}\n                    />\n                    <span id=\"image-error\" className='popup__error '></span>\n                </>\n            }\n        />\n    )\n}\n\nexport default AddPlacePopup;","import React, {useEffect, useState} from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\n\nfunction App() {\n\n    const [currentUser, setCurrentUser] = useState({});\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState({});\n\n\n    useEffect(() => {\n        api.getUserInfo()\n            .then((userData) => {\n                setCurrentUser(userData);\n            })\n            .catch(err => console.log(err));\n\n    }, [currentUser]);\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n        setIsImagePopupOpen(true);\n    }\n\n    function handleUpdateUser(userData) {\n        api.setUserInfo(userData)\n            .then((res) => {\n                setCurrentUser(res);\n                closeAllPopups();\n            })\n            .catch(err => console.log(err))\n    }\n\n    function handleUpdateAvatar(avatarData) {\n        api.setUserAvatar(avatarData)\n            .then((res) => {\n                setCurrentUser(res);\n                closeAllPopups();\n            })\n            .catch(err => console.log(err));\n    }\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsImagePopupOpen(false);\n    }\n\n    const [cards, setCards] = useState([]);\n\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        api.toggleLike(card._id, !isLiked)\n            .then((newCard) => {\n                const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n                setCards(newCards);\n            })\n            .catch(err => console.log(err));\n    }\n\n    function handleCardDelete(card) {\n        api.removeCard(card._id)\n            .then(() => {\n                const newCards = cards.filter((item) => item._id !== card._id);\n                setCards(newCards);\n            })\n            .catch((err) => console.log(err))\n    }\n\n    useEffect(() => {\n        api.getCards()\n            .then((res) => {\n                setCards(res);\n            })\n            .catch((err) => console.log(err));\n    }, []);\n\n    function handleAddPlaceSubmit(newCard) {\n        api.addCard(newCard)\n            .then((res) => {\n                setCards([\n                    res,\n                    ...cards,\n                ]);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err));\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <Header/>\n            <Main\n                cards={cards}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onEditAvatar={handleEditAvatarClick}\n                onCardClick={handleCardClick}\n                onCardLike={handleCardLike}\n                onCardDelete={handleCardDelete}\n            />\n            <Footer/>\n            <EditProfilePopup\n                isOpen={isEditProfilePopupOpen}\n                onClose={closeAllPopups}\n                onUpdateUser={handleUpdateUser}\n            />\n            <EditAvatarPopup\n                isOpen={isEditAvatarPopupOpen}\n                onClose={closeAllPopups}\n                onUpdateAvatar={handleUpdateAvatar}\n            />\n            <AddPlacePopup\n                isOpen={isAddPlacePopupOpen}\n                onClose={closeAllPopups}\n                onAddPlace={handleAddPlaceSubmit}\n            />\n            <PopupWithForm\n                name='confirm'\n                title='Вы уверены?'\n            />\n            <ImagePopup\n                isOpen={isImagePopupOpen}\n                onClose={closeAllPopups}\n                card={selectedCard}\n            />\n        </CurrentUserContext.Provider>\n\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('.content')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}