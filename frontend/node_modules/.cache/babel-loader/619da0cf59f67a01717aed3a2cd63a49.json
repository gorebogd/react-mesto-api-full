{"ast":null,"code":"class Api {\n  constructor({\n    address,\n    token,\n    groupId\n  }) {\n    this._token = token;\n    this._groupId = groupId;\n    this._address = address;\n  }\n\n  getResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._address}/${this._groupId}/users/me`, {\n      headers: {\n        authorization: this._token\n      }\n    }).then(this.getResponse);\n  }\n\n  setUserInfo({\n    name,\n    about\n  }) {\n    return fetch(`${this._address}/${this._groupId}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this.getResponse);\n  }\n\n  setUserAvatar({\n    avatar\n  }) {\n    return fetch(`${this._address}/${this._groupId}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this.getResponse);\n  }\n\n  getCards() {\n    return fetch(`${this._address}/${this._groupId}/cards`, {\n      headers: {\n        authorization: this._token\n      }\n    }).then(this.getResponse);\n  }\n\n  addCard(data) {\n    return fetch(`${this._address}/${this._groupId}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.place,\n        link: data.image\n      })\n    }).then(this.getResponse);\n  }\n\n  removeCard(cardId) {\n    return fetch(`${this._address}/${this._groupId}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    }).then(this.getResponse);\n  }\n\n  toggleLike(cardID, like) {\n    return fetch(`${this._address}/${this._groupId}/cards/likes/${cardID}`, {\n      method: like ? 'PUT' : 'DELETE',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(this.getResponse);\n  }\n\n}\n\nconst api = new Api({\n  address: \"https://mesto.nomoreparties.co/v1\",\n  groupId: `cohort-16`,\n  token: `6b84de2d-b5c7-4b45-ba81-be44fff680e4`\n});\nexport default api;","map":{"version":3,"sources":["/home/bogdan/Рабочий стол/dev/mesto-react/src/utils/api.js"],"names":["Api","constructor","address","token","groupId","_token","_groupId","_address","getResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","headers","authorization","then","setUserInfo","name","about","method","body","JSON","stringify","setUserAvatar","avatar","getCards","addCard","data","place","link","image","removeCard","cardId","toggleLike","cardID","like","api"],"mappings":"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","sourcesContent":[" class Api {\n    constructor({address, token, groupId}) {\n        this._token = token;\n        this._groupId = groupId;\n        this._address = address;\n    }\n\n    getResponse(res) {\n        return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`)\n    }\n\n    getUserInfo() {\n        return fetch(`${this._address}/${this._groupId}/users/me`, {\n            headers: {\n                authorization: this._token\n            }\n        })\n            .then(this.getResponse)\n    }\n\n    setUserInfo({ name, about }) {\n        return fetch(`${this._address}/${this._groupId}/users/me`, {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name,\n                about\n        })\n    })\n            .then(this.getResponse)\n    }\n\n    setUserAvatar({avatar}) {\n        return fetch(`${this._address}/${this._groupId}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                avatar\n            })\n        })\n            .then(this.getResponse);\n    }\n\n    getCards() {\n        return fetch(`${this._address}/${this._groupId}/cards`, {\n            headers: {\n                authorization: this._token\n            }\n        })\n            .then(this.getResponse)\n    }\n\n    addCard(data) {\n        return fetch(`${this._address}/${this._groupId}/cards`, {\n            method: 'POST',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: data.place,\n                link: data.image\n            })\n        })\n            .then(this.getResponse)\n    }\n\n    removeCard(cardId) {\n        return fetch(`${this._address}/${this._groupId}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: {\n                authorization: this._token,\n            }\n        })\n            .then(this.getResponse)\n    }\n\n    toggleLike(cardID, like) {\n        return fetch(`${this._address}/${this._groupId}/cards/likes/${cardID}`, {\n          method: like ? 'PUT' : 'DELETE',\n          headers: {\n            authorization: this._token,\n            'Content-Type': 'application/json'\n          }\n        })\n          .then(this.getResponse)\n      }\n }\n\n const api = new Api({\n    address: \"https://mesto.nomoreparties.co/v1\",\n    groupId: `cohort-16`,\n    token: `6b84de2d-b5c7-4b45-ba81-be44fff680e4`,\n});\n\nexport default api;\n\n"]},"metadata":{},"sourceType":"module"}