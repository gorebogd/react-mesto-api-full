{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/bogdan/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState({});\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  useEffect(() => {\n    api.getUserInfo().then(userData => {\n      setCurrentUser(userData);\n    }).catch(err => console.log(err));\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setIsImagePopupOpen(true);\n  }\n\n  function handleUpdateUser(userData) {\n    api.setUserInfo(userData).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(avatarData) {\n    api.setUserAvatar(avatarData).then(res => {\n      setCurrentUser({ ...currentUser,\n        res\n      });\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n  }\n\n  const [cards, setCards] = useState([]);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.toggleLike(card._id, !isLiked).then(newCard => {\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.removeCard(card._id).then(() => {\n      const newCards = cards.filter(item => item._id !== card._id);\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  }\n\n  useEffect(() => {\n    api.getCards().then(res => {\n      setCards(res);\n    }).catch(err => console.log(err));\n  }, []);\n\n  function handleAddPlaceSubmit(newCard) {\n    api.addCard(newCard).then(res => {\n      setCards([res, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      cards: cards,\n      onEditProfile: handleEditProfileClick,\n      onAddPlace: handleAddPlaceClick,\n      onEditAvatar: handleEditAvatarClick,\n      onCardClick: handleCardClick,\n      onCardLike: handleCardLike,\n      onCardDelete: handleCardDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n      isOpen: isEditProfilePopupOpen,\n      onClose: closeAllPopups,\n      onUpdateUser: handleUpdateUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n      isOpen: isEditAvatarPopupOpen,\n      onClose: closeAllPopups,\n      onUpdateAvatar: handleUpdateAvatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n      isOpen: isAddPlacePopupOpen,\n      onClose: closeAllPopups,\n      onAddPlace: handleAddPlaceSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n      name: \"confirm\",\n      title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n      isOpen: isImagePopupOpen,\n      onClose: closeAllPopups,\n      card: selectedCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"yQC6vYezoTYk7imLTFZF4w2W/6s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/bogdan/Рабочий стол/dev/mesto-react/src/components/App.js"],"names":["React","useState","useEffect","Header","Main","Footer","PopupWithForm","ImagePopup","CurrentUserContext","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","App","currentUser","setCurrentUser","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","getUserInfo","then","userData","catch","err","console","log","handleEditProfileClick","handleEditAvatarClick","handleAddPlaceClick","handleCardClick","card","handleUpdateUser","setUserInfo","res","closeAllPopups","handleUpdateAvatar","avatarData","setUserAvatar","cards","setCards","handleCardLike","isLiked","likes","some","i","_id","toggleLike","newCard","newCards","map","c","handleCardDelete","removeCard","filter","item","getCards","handleAddPlaceSubmit","addCard"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\n\nfunction App() {\n\n    const [currentUser, setCurrentUser] = useState({});\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState({});\n\n\n    useEffect(() => {\n        api.getUserInfo()\n            .then((userData) => {\n                setCurrentUser(userData);\n            })\n            .catch(err => console.log(err));\n        \n    }, []);\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n    \n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n    \n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n        setIsImagePopupOpen(true);\n    }\n\n    function handleUpdateUser(userData) {\n        api.setUserInfo(userData)\n        .then((res) => {\n            setCurrentUser(res);\n            closeAllPopups();\n        })\n        .catch(err => console.log(err))\n    }\n\n    function handleUpdateAvatar(avatarData) {\n        api.setUserAvatar(avatarData)\n          .then((res) => {\n                setCurrentUser( { ...currentUser, res } );\n                closeAllPopups();\n          })\n          .catch(err => console.log(err));\n      }\n\n    function closeAllPopups () {\n        setIsEditProfilePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsImagePopupOpen(false);\n    }\n\n    const [cards, setCards] = useState([]);\n\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);  \n        api.toggleLike(card._id, !isLiked)\n        .then((newCard) => {\n          const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n          setCards(newCards);\n        });\n    } \n\n    function handleCardDelete(card) {\n        api.removeCard(card._id)\n        .then(() => {\n            const newCards = cards.filter((item) => item._id !== card._id);\n            setCards(newCards);\n        })\n        .catch((err) => console.log(err))\n    }\n\n    useEffect(() => {\n        api.getCards()\n          .then((res) => {\n            setCards(res);\n          })\n          .catch((err) => console.log(err));\n      }, []);\n\n    function handleAddPlaceSubmit(newCard) {\n        api.addCard(newCard)\n            .then((res) => {\n                setCards([\n                    res,\n                    ...cards,\n                ]);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err));\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <Header />\n            <Main \n                cards={cards}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onEditAvatar={handleEditAvatarClick}\n                onCardClick={handleCardClick}\n                onCardLike={handleCardLike}\n                onCardDelete={handleCardDelete}\n                />\n            <Footer/>\n            <EditProfilePopup \n                isOpen={isEditProfilePopupOpen} \n                onClose={closeAllPopups} \n                onUpdateUser={handleUpdateUser}\n                />\n            <EditAvatarPopup\n                isOpen={isEditAvatarPopupOpen} \n                onClose={closeAllPopups} \n                onUpdateAvatar={handleUpdateAvatar}\n                />\n            <AddPlacePopup\n                isOpen={isAddPlacePopupOpen}\n                onClose={closeAllPopups}\n                onAddPlace={handleAddPlaceSubmit}\n                /> \n            {/* <PopupWithForm\n                isOpen={isEditProfilePopupOpen} \n                onClose={closeAllPopups}\n                name='edit-profile'\n                title='Редактировать профиль'\n                children={\n                    <>\n                        <input\n                            name=\"name\"\n                            type=\"text\"\n                            placeholder=\"Имя\"\n                            className=\"popup__input-text popup__input-text_type_name\"\n                            minLength=\"2\"\n                            maxLength=\"40\"\n                            autoComplete=\"off\"\n                            required\n                        />\n                        <span id=\"name-error\" className='popup__error'></span>\n                        <input\n                            name=\"job\"\n                            type=\"text\"\n                            placeholder=\"Профессия\"\n                            className=\"popup__input-text popup__input-text_type_job\"\n                            minLength=\"2\"\n                            maxLength=\"200\"\n                            autoComplete=\"off\"\n                            required\n                        />\n                        <span id=\"job-error\" className='popup__error'></span>\n                    </>\n\n            }/> */}\n            {/* <PopupWithForm\n                isOpen={isAddPlacePopupOpen}\n                onClose={closeAllPopups}\n                name='add-card'\n                title='Новое место'\n                children={\n                    <>\n                         <input\n                            name=\"place\"\n                            type=\"text\"\n                            placeholder=\"Название\"\n                            className=\"popup__input-text popup__input-text_type_place\"\n                            minLength=\"1\"\n                            maxLength=\"30\"\n                            autoComplete=\"off\"\n                            required\n                        />\n                        <span id=\"place-error\" className='popup__error'></span>\n                        <input\n                            name=\"image\"\n                            type=\"url\"\n                            placeholder=\"Ссылка на картинку\"\n                            className=\"popup__input-text popup__input-text_type_url\"\n                            autoComplete=\"off\"\n                            required\n                        />\n                        <span id=\"image-error\" className='popup__error '></span>\n                    </>\n                }\n            /> */}\n\n            {/* <PopupWithForm\n                isOpen={isEditAvatarPopupOpen}\n                onClose={closeAllPopups}\n                name='update-avatar'\n                title='Обновить Аватар'\n                children={\n                    <>\n                        <input\n                            name=\"avatar\"\n                            type=\"url\"\n                            placeholder=\"Введите URL аватара\"\n                            className=\"popup__input-text popup__input-text_type_avatar-source\"\n                            required\n                        />\n                        <span id=\"avatar-error\" className='popup__error'></span>   \n                    </>\n                }\n            /> */}\n            <PopupWithForm\n                name='confirm'\n                title='Вы уверены?'\n            />\n            <ImagePopup \n                isOpen={isImagePopupOpen}\n                onClose={closeAllPopups}\n                card={selectedCard}\n                />\n\n            {/* <div className=\"popup popup_type_edit-profile\">\n                <div className=\"popup__container\">\n                    <button type=\"button\" className=\"popup__close-button\"></button>\n                    <h2 className=\"popup__title\">Редактировать профиль</h2>\n                    <form action=\"#\" className=\"popup__form\" noValidate>\n                        <input\n                            name=\"name\"\n                            type=\"text\"\n                            placeholder=\"Имя\"\n                            className=\"popup__input-text popup__input-text_type_name\"\n                            minLength=\"2\"\n                            maxLength=\"40\"\n                            autoComplete=\"off\"\n                            required\n                        />\n                        <span id=\"name-error\" className='popup__error'></span>\n                        <input\n                            name=\"job\"\n                            type=\"text\"\n                            placeholder=\"Профессия\"\n                            className=\"popup__input-text popup__input-text_type_job\"\n                            minLength=\"2\"\n                            maxLength=\"200\"\n                            autoComplete=\"off\"\n                            required\n                        />\n                        <span id=\"job-error\" className='popup__error'></span>\n                        <button type=\"submit\" className=\"popup__submit\">Сохранить</button>\n                    </form>\n                </div>\n            </div>\n\n            <div className=\"popup popup_type_add-card\">\n                <div className=\"popup__container\">\n\n                    <button type=\"button\" className=\"popup__close-button\"></button>\n                    <h2 className=\"popup__title\">Новое место</h2>\n                    <form action=\"#\" className=\"popup__form\" noValidate>\n                        <input\n                            name=\"place\"\n                            type=\"text\"\n                            placeholder=\"Название\"\n                            className=\"popup__input-text popup__input-text_type_place\"\n                            minLength=\"1\"\n                            maxLength=\"30\"\n                            autoComplete=\"off\"\n                            required\n                        />\n                        <span id=\"place-error\" className='popup__error'></span>\n                        <input\n                            name=\"image\"\n                            type=\"url\"\n                            placeholder=\"Ссылка на картинку\"\n                            className=\"popup__input-text popup__input-text_type_url\"\n                            autoComplete=\"off\"\n                            required\n                        />\n                        <span id=\"image-error\" className='popup__error '></span>\n                        <button type=\"submit\" className=\"popup__submit popup__submit_disabled\" disabled>Создать</button>\n                    </form>\n                </div>\n            </div>\n\n            <div className=\"popup popup_type_confirm\">\n                <div className=\"popup__container\">\n                    <h2 className=\"popup__title popup__title_type_confirm\">Вы уверены?</h2>\n                    <button type=\"button\" className=\"popup__close-button\"></button>\n                    <form className=\"popup__form\" noValidate>\n                        <input type=\"submit\" className=\"popup__submit\" value=\"Да\"/>\n                    </form>\n                </div>\n            </div>\n\n            <div className=\"popup popup_type_update-avatar\">\n                <div className=\"popup__container\">\n                    <h2 className=\"popup__title\">Обновить аватар</h2>\n                    <button type=\"button\" className=\"popup__close-button\"></button>\n                    <form className=\"popup__form\" noValidate>\n                        <input\n                            name=\"avatar\"\n                            type=\"url\"\n                            placeholder=\"Введите URL аватара\"\n                            className=\"popup__input-text popup__input-text_type_avatar-source\"\n                            required\n                        />\n                        <span id=\"avatar-error\" className='popup__error'></span>\n                        <button type=\"submit\" className=\"popup__submit\">Сохранить</button>\n                    </form>\n                </div>\n            </div> */}\n\n\n            {/* <div className=\"popup popup_type_image\">\n                <div className=\"popup__container_type_image\">\n                    <button type=\"button\" className=\"popup__close-button\"></button>\n                    <figure className=\"popup__figure\">\n                        <img src=\"#\" alt=\"Полноформатное фото места\" className=\"popup__image\"/>\n                        <figcaption className=\"popup__description\"></figcaption>\n                    </figure>\n                </div>\n            </div> */}\n\n            {/* <template className=\"cards-template\">\n                <div className=\"cards__card\">\n                    <button type=\"button\" className=\"cards__delete-button\"></button>\n                    <img\n                        alt=\"Фото места\"\n                        className=\"cards__image\"\n                    />\n                    <div className=\"cards__info\">\n                        <h2 className=\"cards__title\"></h2>\n                        <div className=\"cards__like-container\">\n                            <button type=\"button\" className=\"cards__like-button\"></button>\n                            <p className=\"cards__like-count\">0</p>\n                        </div>\n                    </div>\n                </div>\n            </template> */}\n        </CurrentUserContext.Provider>\n\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}